---
interface Stat {
  name: string;
  base: number;
}

interface Props {
  id: number;
  name: string;
  sprite: string;
  stats: Stat[];
  types: string[];
}

const { id, name, sprite, stats, types } = Astro.props as Props;

---

<div class={`pokemon-card type-bg-${types[0]}`}>
  <img class="pokemon-image" src={sprite} alt={name} />

  <div class="pokemon-info">
    <div class="pokemon-header">
      <span class="pokemon-id">#{id.toString().padStart(3, '0')}</span>
      <h2 class="pokemon-name">{name}</h2>
    </div>

    <div class="pokemon-types">
      {types.map((type) => (
        <span class={"type-badge " + type}>{type}</span>
      ))}
    </div>

    <div class="card-actions">
      <button
        data-add-to-team={id}
        data-name={name}
        data-sprite={sprite}
        class="add-button"
        >
          Add to Team
      </button>

      <button 
        class="stats-button" 
        type="button" 
        data-open-modal={`modal-${id}`}
      >
        View Stats
      </button>
    </div>
  </div>
</div>


<style>
.pokemon-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  border-radius: 1rem;
  padding: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  text-align: left;
  transition: transform 0.2s ease;
}

.pokemon-card:hover {
  transform: scale(1.03);
}

.pokemon-image {
  width: 60%;
  height: auto;
  object-fit: contain;
  margin-bottom: 0.75rem;
}

.pokemon-info {
  width: 100%;
}

.pokemon-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.pokemon-id {
  font-size: 0.9rem;
  color: #666;
}

.pokemon-name {
  font-size: 1.25rem;
  font-weight: bold;
  color: #2f323f;
  text-transform: capitalize;
}

.card-actions {
  display: flex;
  justify-content: space-between;
  gap: 0.5rem;
}

.add-button,
.stats-button {
  flex: 1;
  padding: 0.5rem;
  font-size: 0.85rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  background-color: #ffcb05;
  color: #2a2a2a;
  font-weight: 600;
  transition: background-color 0.2s ease;
}

.stats-button {
  background-color: #3b4cca;
  color: white;
}

.add-button:hover {
  background-color: #f2b807;
}

.stats-button:hover {
  background-color: #2a35a0;
}

.stats-list {
  padding: 0;
  color: #2f323f;
}

/* Card background tints */
.type-bg-fire { background-color: #fff0e0; }
.type-bg-water { background-color: #e0f0ff; }
.type-bg-grass { background-color: #eaffea; }
.type-bg-electric { background-color: #fffce0; }
.type-bg-ice { background-color: #e0f8f8; }
.type-bg-psychic { background-color: #ffe0f0; }
.type-bg-rock { background-color: #f5f0e0; }
.type-bg-ground { background-color: #f8f0dc; }
.type-bg-flying { background-color: #f0f8ff; }
.type-bg-bug { background-color: #f8fce0; }
.type-bg-normal { background-color: #f5f5f5; }
.type-bg-fighting { background-color: #fbeaea; }
.type-bg-poison { background-color: #f3e6f8; }
.type-bg-ghost { background-color: #eeeaff; }
.type-bg-dragon { background-color: #f0eaff; }
.type-bg-dark { background-color: #eaeaea; }
.type-bg-steel { background-color: #f2f6f7; }
.type-bg-fairy { background-color: #fff0f5; }
</style>
